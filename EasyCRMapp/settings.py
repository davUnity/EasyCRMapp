"""
Django settings for EasyCRMapp project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
	# Since Django treats Development and Production environments differently,
	# we want to be able to see the error codes that are displayed for each.
	# This "settings file" that includes the error should obviously be kept
	# secret to the admin/superusers and not to the client/user.
	# -----------------------------------------------------------------------
	# To differentiate, we will use Environment Variables. However, since
	# Python's default error messages for importing environment variables
	# is not helpful, we will import a tool that does provide the right error 
	# messages. 
	# Credit of this tool goes to the book: "Two Scoops of Django"
import os
from django.core.exceptions import ImproperlyConfigured

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
	# How this tool works:
	# The first variable = Tells Django what environment it is running in by
		# setting the ENV_ROLE variable to either development, staging, or
		# production.
	# -----------------------------------------------------------------------
	# For Handling Key Import Errors
def get_env_variable(var_name):
	""" Get the Environment Variable or return exception """
	try:
		return os.environ[var_name]
	except KeyError:
		error_msg = "Set the %s Environment Variable" % var_name
		raise ImproperlyConfigured(error_msg)
	#Get ENV Variable key
ENV_ROLE = get_env_variable('ENV_ROLE')
	# -----------------------------------------------------------------------
	# The Second Variable = The DEBUG value will determine how Django displays
	# errors. IF the value is set to True, a debug page will be shown when errors
	# are encountered.
	# SECURITY WARNING: Don't run with debug turned on in production!
DEBUG = False
TEMPLATE_DEBUG = DEBUG
	# Instead of hardcoding the password in here, we are setting it as a
	# environment variable in Windows with: setx CRMEASY_DB_PASS <password>
CRMEASY_DB_PASS = False
if ENV_ROLE == 'development':
	DEBUG = True
	TEMPLATE_DEBUG = DEBUG
	CRMEASY_DB_PASS = get_env_variable('CRMEASY_DB_PASS')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
	# Instead of hardcoding the password in here, we are setting it as a 
	# environment variable in Windows with: setx SECRET_KEY <secretKEY>
SECRET_KEY = get_env_variable('SECRET_KEY')

# DEFAULT DEBUG
	# SECURITY WARNING: don't run with debug turned on in production!
	# DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'EasyCRMapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'EasyCRMapp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
		#Currently using PostgreSQL with psycopg2 Windows Adapter
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'crmeasyDB',
		'USER': 'postgres',
		# Note the change is set to whatever the Windows Environment Variable 
		# was set as.
		'PASSWORD': CRMEASY_DB_PASS,
		'HOST': '/tmp',
		'PORT': '5432',
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Mexico_City'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
